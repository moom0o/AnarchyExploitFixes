package me.xginko.aef.config;

import io.github.thatsmusic99.configurationmaster.api.ConfigFile;
import me.xginko.aef.AnarchyExploitFixes;
import me.xginko.aef.utils.KyoriUtil;
import me.xginko.aef.utils.LocaleUtil;
import net.kyori.adventure.text.Component;
import net.kyori.adventure.text.minimessage.MiniMessage;

import java.io.File;
import java.util.List;
import java.util.Locale;

public class Translation {

    private final ConfigFile translationFile;

    public final Component no_permission, invalid_syntax, failed_argument_parse, chat_commandwhitelist_badcommand,
            misc_joinMessage, misc_leaveMessage, misc_MaskedKickMessage, preventions_witherSpawningDisabledInRadius,
            misc_enabledConnectionMsgs, misc_disabledConnectionMsgs, elytra_disablePacketElytraFly,
            elytra_global_YouAreFlyingIn, elytra_global_New, elytra_global_New_UpperCase, elytra_global_Old,
            elytra_global_Old_UpperCase, elytra_global_Speed, elytra_global_DisabledLowTPS, elytra_global_TooFastLowTPS,
            elytra_global_TooFastChunkInfo, elytra_disable_timer, elytra_global_TooFast, elytra_global_DisabledHere,
            elytra_global_Chunks, elytra_ceiling_DisabledHere, elytra_ceiling_Chunks, elytra_ceiling_YouAreFlyingIn,
            elytra_ceiling_New, elytra_ceiling_New_UpperCase, elytra_ceiling_Old, elytra_ceiling_Old_UpperCase,
            elytra_ceiling_Speed, elytra_ceiling_DisabledLowTPS, elytra_ceiling_TooFastLowTPS, elytra_ceiling_TooFastChunkInfo,
            elytra_ceiling_TooFast, elytra_spawn_DisabledHere, elytra_spawn_YouAreFlyingIn, elytra_spawn_New,
            elytra_spawn_New_UpperCase, elytra_spawn_Old, elytra_spawn_Old_UpperCase, elytra_spawn_Speed,
            elytra_spawn_DisabledLowTPS, elytra_spawn_TooFast, elytra_spawn_TooFastChunkInfo, elytra_spawn_Chunks,
            lagpreventions_stopSpammingLevers;
    public final List<Component> misc_firstJoinMessage, help_Message;

    public Translation(Locale locale) throws Exception {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        String langFileName = LocaleUtil.languageTagForLocale(locale) + ".yml";
        File langYML = new File(plugin.getDataFolder() + "/lang", langFileName);
        // Check if the file already exists and save the one from the plugin's resources folder if it does not
        if (!langYML.exists()) plugin.saveResource("lang/" + langFileName, false);
        // Finally, load the lang file with configmaster
        this.translationFile = ConfigFile.loadConfig(langYML);

        // Commands
        this.no_permission = getTranslation("commands.no-permission",
                "<red>You don't have permission to use this command.");
        this.invalid_syntax = getTranslation("commands.invalid-syntax",
                "<red>Invalid command syntax. Correct syntax: <gray>%syntax%");
        this.failed_argument_parse = getTranslation("commands.failed-argument-parse",
                "<red>Failed to parse command arguments.");
        this.help_Message = getListTranslation("commands.help-command", List.of(
                "<dark_aqua>----------------------------------------------------",
                "<gray>/toggleconnectionmsgs <dark_gray>- <gray>Turns off join messages",
                "<gray>/toggledeathmsgs <dark_gray>- <gray>Turns off death messages",
                "<gray>/toggletells <dark_gray>- <gray>Turns off private messages",
                "<gray>/togglechat <dark_gray>- <gray>Turns off chat messages",
                "<gray>/ignore <dark_gray>- <gray>Ignore certain players",
                "<gray>/seed <dark_gray>- <gray>Shows the server seed",
                "<gray>/kill <dark_gray>- <gray>Kills you",
                "<gray>/reply <dark_gray>- <gray>Reply to messages",
                "<gray>/msg <dark_gray>- <gray>Message other players",
                "<gray>/stats <dark_gray>- <gray>Shows world statistics",
                "<dark_aqua>----------------------------------------------------"
        ));
        // Chat
        this.chat_commandwhitelist_badcommand = getTranslation("command-whitelist.bad-command",
                "<dark_red>Bad command. Type /help for a list of commands.");
        // Misc
        this.misc_joinMessage = getTranslation("join-leave-messages.join",
                "<gray>%player% joined the game.");
        this.misc_leaveMessage = getTranslation("join-leave-messages.leave",
                "<gray>%player% left the game.");
        this.misc_enabledConnectionMsgs = getTranslation("join-leave-messages.enabled-connection-msgs",
                "<gray>Enabled connection msgs");
        this.misc_disabledConnectionMsgs = getTranslation("join-leave-messages.disabled-connection-msgs",
                "<gray>Disabled connection msgs");
        this.misc_firstJoinMessage = getListTranslation("join-leave-messages.first-join",
                List.of("<gray>%player% joined the game for the first time. They are %players_num% to join."));
        this.misc_MaskedKickMessage = getTranslation("kicks.masked-kick-message",
                "<gold>Disconnected");
        // Lag Preventions
        this.lagpreventions_stopSpammingLevers = getTranslation("redstone.stop-spamming-levers",
                "<red>Stop spamming levers.");
        // Disable Wither Spawning at Spawn
        this.preventions_witherSpawningDisabledInRadius = getTranslation("withers.disabled-at-spawn",
                "<dark_red>Wither spawning is disabled in a radius of %radius% blocks around spawn.");
        /*
            Elytra
        */
        // Packet ElytraFly message
        this.elytra_disablePacketElytraFly = getTranslation("elytra.disable-packet-elytrafly",
                "<red>Disable Packet Elytra Fly.");
        // Timer ElytraFly message
        this.elytra_disable_timer = getTranslation("elytra.disable-timer",
                "<red>Disable Timer when traveling with an elytra.");
        // Global
        this.elytra_global_DisabledHere = getTranslation("elytra.elytra-speed.global.disabled-here",
                "<red>Elytras are currently disabled.");
        this.elytra_global_YouAreFlyingIn = getTranslation("elytra.elytra-speed.global.you-are-flying-in",
                "<gray>You are flying in %neworold% <gray>%chunks%");
        this.elytra_global_New = getTranslation("elytra.elytra-speed.global.new",
                "new");
        this.elytra_global_New_UpperCase = KyoriUtil.toUpperCase(elytra_global_New, locale)
                .style(getTranslation("elytra.elytra-speed.global.color-newchunks", "<dark_red>").style());
        this.elytra_global_Old = getTranslation("elytra.elytra-speed.global.old",
                "old");
        this.elytra_global_Old_UpperCase = KyoriUtil.toUpperCase(elytra_global_Old, locale)
                .style(getTranslation("elytra.elytra-speed.global.color-oldchunks", "<green>").style());
        this.elytra_global_Speed = getTranslation("elytra.elytra-speed.global.speed",
                "<gray>Speed: %speed% / %maxspeed%");
        this.elytra_global_DisabledLowTPS = getTranslation("elytra.elytra-speed.global.disabled-low-tps",
                "<red>Elytras are currently disabled because the tps is lower than %tps%.");
        this.elytra_global_TooFastLowTPS = getTranslation("elytra.elytra-speed.global.going-too-fast-low-tps",
                "<red>Elytra speed is reduced during low tps. Turn down your settings.");
        this.elytra_global_TooFastChunkInfo = getTranslation("elytra.elytra-speed.global.going-too-fast-chunkinfo",
                "<red>Turn down your settings. Elytra speed is restricted in %neworold% %chunks%");
        this.elytra_global_TooFast = getTranslation("elytra.elytra-speed.global.going-too-fast",
                "<red>Turn down your settings. Elytra speed is restricted on this server.");
        this.elytra_global_Chunks = getTranslation("elytra.elytra-speed.global.chunks", "chunks");
        // Nether Ceiling
        this.elytra_ceiling_DisabledHere = getTranslation("elytra.elytra-speed.nether-ceiling.disabled-here",
                "<red>Elytras are disabled on the nether ceiling.");
        this.elytra_ceiling_YouAreFlyingIn = getTranslation("elytra.elytra-speed.nether-ceiling.you-are-flying-in",
                "<gray>You are flying in %neworold% <gray>%chunks%");
        this.elytra_ceiling_New = getTranslation("elytra.elytra-speed.nether-ceiling.new",
                "new");
        this.elytra_ceiling_New_UpperCase = KyoriUtil.toUpperCase(elytra_global_New_UpperCase, locale)
                .style(getTranslation("elytra.elytra-speed.nether-ceiling.color-newchunks", "<dark_red>").style());
        this.elytra_ceiling_Old = getTranslation("elytra.elytra-speed.nether-ceiling.old",
                "old");
        this.elytra_ceiling_Old_UpperCase = KyoriUtil.toUpperCase(elytra_ceiling_Old, locale)
                .style(getTranslation("elytra.elytra-speed.nether-ceiling.color-oldchunks", "<green>").style());
        this.elytra_ceiling_Speed = getTranslation("elytra.elytra-speed.nether-ceiling.speed",
                "<gray>Speed: %speed% / %maxspeed%");
        this.elytra_ceiling_DisabledLowTPS = getTranslation("elytra.elytra-speed.nether-ceiling.disabled-low-tps",
                "<red>Elytras are currently disabled because the tps is lower than %tps%.");
        this.elytra_ceiling_TooFastLowTPS = getTranslation("elytra.elytra-speed.nether-ceiling.going-too-fast-low-tps",
                "<red>Elytra speed is reduced during low tps. Turn down your settings.");
        this.elytra_ceiling_TooFastChunkInfo = getTranslation("elytra.elytra-speed.nether-ceiling.going-too-fast-chunkinfo",
                "<red>Turn down your settings. Elytra speed is restricted in %neworold% %chunks%");
        this.elytra_ceiling_TooFast = getTranslation("elytra.elytra-speed.nether-ceiling.going-too-fast",
                "<red>Turn down your settings. Elytra speed is restricted on the nether ceiling.");
        this.elytra_ceiling_Chunks = getTranslation("elytra.elytra-speed.nether-ceiling.chunks",
                "ceiling chunks");
        // Spawn
        this.elytra_spawn_DisabledHere = getTranslation("elytra.elytra-speed.spawn.disabled-here",
                "<red>Elytras are disabled in a range of <gold>%range% <red>blocks around spawn.");
        this.elytra_spawn_YouAreFlyingIn = getTranslation("elytra.elytra-speed.spawn.you-are-flying-in",
                "<gray>You are flying in %neworold% <gray>%chunks%");
        this.elytra_spawn_New = getTranslation("elytra.elytra-speed.spawn.new",
                "new");
        this.elytra_spawn_New_UpperCase = KyoriUtil.toUpperCase(elytra_spawn_New, locale)
                .style(getTranslation("elytra.elytra-speed.spawn.color-newchunks", "<dark_red>").style());
        this.elytra_spawn_Old = getTranslation("elytra.elytra-speed.spawn.old",
                "old");
        this.elytra_spawn_Old_UpperCase = KyoriUtil.toUpperCase(elytra_spawn_Old, locale)
                .style(getTranslation("elytra.elytra-speed.spawn.color-oldchunks", "<green>").style());
        this.elytra_spawn_Speed = getTranslation("elytra.elytra-speed.spawn.speed",
                "<gray>Speed: %speed% / %maxspeed%");
        this.elytra_spawn_DisabledLowTPS = getTranslation("elytra.elytra-speed.spawn.disabled-low-tps",
                "<red>Elytras are currently disabled because the tps is lower than %tps%.");
        this.elytra_spawn_TooFastChunkInfo = getTranslation("elytra.elytra-speed.spawn.going-too-fast-chunkinfo",
                "<red>Elytra speed is restricted in %neworold% %chunks% in a radius of %radius% blocks.");
        this.elytra_spawn_TooFast = getTranslation("elytra.elytra-speed.nether-ceiling.going-too-fast",
                "<red>Elytra speed is restricted in a radius of %radius% blocks around spawn.");
        this.elytra_spawn_Chunks = getTranslation("elytra.elytra-speed.spawn.chunks",
                "spawn chunks");

        try {
            this.translationFile.save();
        } catch (Exception e) {
            AnarchyExploitFixes.prefixedLogger().error("Failed to save language file: {}!", langYML.getName(), e);
        }
    }

    private Component getTranslation(String path, String defaultTranslation) {
        translationFile.addDefault(path, defaultTranslation);
        return MiniMessage.miniMessage().deserialize(KyoriUtil.translateChatColor(translationFile.getString(path, defaultTranslation)));
    }

    private Component getTranslation(String path, String defaultTranslation, String comment) {
        translationFile.addDefault(path, defaultTranslation, comment);
        return MiniMessage.miniMessage().deserialize(KyoriUtil.translateChatColor(translationFile.getString(path, defaultTranslation)));
    }

    private List<Component> getListTranslation(String path, List<String> defaultTranslation) {
        translationFile.addDefault(path, defaultTranslation);
        return translationFile.getStringList(path).stream().map(KyoriUtil::translateChatColor).map(MiniMessage.miniMessage()::deserialize).toList();
    }

    private List<Component> getListTranslation(String path, List<String> defaultTranslation, String comment) {
        translationFile.addDefault(path, defaultTranslation, comment);
        return translationFile.getStringList(path).stream().map(KyoriUtil::translateChatColor).map(MiniMessage.miniMessage()::deserialize).toList();
    }
}