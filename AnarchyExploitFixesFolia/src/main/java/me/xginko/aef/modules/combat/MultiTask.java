package me.xginko.aef.modules.combat;

import com.cryptomorin.xseries.XEntityType;
import io.papermc.paper.event.player.PrePlayerAttackEntityEvent;
import me.xginko.aef.modules.AEFModule;
import org.bukkit.entity.LivingEntity;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.HandlerList;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockPlaceEvent;
import org.bukkit.event.entity.EntityDamageByEntityEvent;
import org.bukkit.event.player.PlayerInteractEvent;

public class MultiTask extends AEFModule implements Listener {

    public MultiTask() {
        super("combat.multi-task-patch", false);
    }

    @Override
    public void enable() {
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public void disable() {
        HandlerList.unregisterAll(this);
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    private void onPrePlayerAttackEntity(PrePlayerAttackEntityEvent event) {
        if (event.getPlayer().hasActiveItem()) {
            event.setCancelled(true);
        }
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    private void onEntityDamageByEntity(EntityDamageByEntityEvent event) {
        if (event.getDamager().getType() == XEntityType.PLAYER.get()) {
            if (((LivingEntity) event.getDamager()).hasActiveItem()) {
                event.setCancelled(true);
            }
        }
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    private void onPlayerInteract(PlayerInteractEvent event) {
        if (event.getPlayer().hasActiveItem()) {
            event.setCancelled(true);
        }
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    private void onBlockPlace(BlockPlaceEvent event) {
        if (event.getPlayer().hasActiveItem()) {
            event.setCancelled(true);
        }
    }
}