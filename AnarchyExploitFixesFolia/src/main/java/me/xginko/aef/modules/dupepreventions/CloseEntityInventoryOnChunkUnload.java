package me.xginko.aef.modules.dupepreventions;

import me.xginko.aef.modules.AEFModule;
import me.xginko.aef.utils.EntityUtil;
import org.bukkit.entity.Entity;
import org.bukkit.entity.HumanEntity;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.HandlerList;
import org.bukkit.event.Listener;
import org.bukkit.event.world.ChunkUnloadEvent;
import org.bukkit.inventory.InventoryHolder;

public class CloseEntityInventoryOnChunkUnload extends AEFModule implements Listener {

    public CloseEntityInventoryOnChunkUnload() {
        super("dupe-preventions.close-entity-inventories-on-chunk-unload", false);
        config.addComment(configPath, """
                Closes open inventories of all entities that are in a chunk\s
                that will be unloaded.""");
    }

    @Override
    public void enable() {
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public void disable() {
        HandlerList.unregisterAll(this);
    }

    @EventHandler(priority = EventPriority.HIGH)
    private void onChunkUnload(ChunkUnloadEvent event) {
        for (Entity entity : event.getChunk().getEntities()) {
            entity.getScheduler().execute(plugin, () -> {
                if (EntityUtil.isInventoryHolder(entity)) {
                    for (HumanEntity viewer : ((InventoryHolder) entity).getInventory().getViewers()) {
                        viewer.getScheduler().execute(plugin, viewer::closeInventory, null, 1L);
                    }
                }
            }, null, 1L);
        }
    }
}
