package me.xginko.aef.modules.lagpreventions;

import com.cryptomorin.xseries.XEntityType;
import com.destroystokyo.paper.MaterialTags;
import me.xginko.aef.modules.AEFModule;
import org.bukkit.entity.Item;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.HandlerList;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.EntityDamageEvent;

public class NoShulkerDrops extends AEFModule implements Listener {

    public NoShulkerDrops() {
        super("lag-preventions.anti-shulker-drops", false, """
                Disables shulkers dropping stored items when blown up.\s
                This helps fix client- and serverside lag when done often and fast.""");
    }

    @Override
    public void enable() {
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public void disable() {
        HandlerList.unregisterAll(this);
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    private void onEntityDamage(EntityDamageEvent event) {
        if (event.getEntityType() != XEntityType.ITEM.get()) return;

        if (event.getCause() == EntityDamageEvent.DamageCause.BLOCK_EXPLOSION || event.getCause() == EntityDamageEvent.DamageCause.ENTITY_EXPLOSION) {
            Item item = (Item) event.getEntity();
            if (!MaterialTags.SHULKER_BOXES.isTagged(item.getItemStack())) return;

            if (event.getFinalDamage() >= item.getHealth()) {
                event.setCancelled(true); // Cancel damage so the drop logic doesn't happen
                item.remove(); // remove entity
            }
        }
    }
}
