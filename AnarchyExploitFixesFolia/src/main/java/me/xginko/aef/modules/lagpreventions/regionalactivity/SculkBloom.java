package me.xginko.aef.modules.lagpreventions.regionalactivity;

import me.xginko.aef.utils.LocationUtil;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.block.SculkBloomEvent;

public class SculkBloom extends RegionalActivityModule {

    private final int maxCharge;
    private final boolean chargeLimitEnabled;

    public SculkBloom() {
        super(
                "sculk-bloom",
                false,
                true,
                600,
                1500.0,
                6000,
                10000,
                10.0,
                120.0,
                """
                Limits sculk blooming within a configurable radius and timeframe\s
                to help reduce lag by cancelling high activity hotspots.\s
                \s
                Examples:\s
                \s
                - An entity was killed and dropped experience within an 8-block\s
                  radius of a SculkCatalyst.\s
                - A plugin used SculkCatalyst.bloom(Block, int)"""
        );

        this.chargeLimitEnabled = config.getBoolean(configPath + ".charge-limit.enable", false, """
                Limit the charge power of sculk blooming, which determines to how many blocks
                the sculk will spread after an entity dies near a catalyst.""");
        this.maxCharge = Math.max(0, Math.min(1000, config.getInt(configPath + ".charge-limit.max-charge", 20, """
                Typically, charges will be set to the exp reward of a mob (DroppedExp),
                which is usually 3-5 for animals, and 5-10 for the average mob (up to 50 for wither skeletons).
                Roughly speaking, for each charge, 1 more sculk block will be placed.
                Can only be between 0-1000.""")));
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    private void onSkulkBloom(SculkBloomEvent event) {
        if (chargeLimitEnabled && event.getCharge() > maxCharge) {
            if (logIsEnabled) {
                info(   "Limiting Sculk charge limit (charge=" + event.getCharge() + "|max=" + maxCharge + ") " +
                        "at " + LocationUtil.toString(event.getBlock().getLocation()));
            }
            event.setCharge(maxCharge);
            return;
        }

        if (shouldCancelEvent(event, event.getBlock().getLocation())) {
            event.setCancelled(true);
        }
    }
}
