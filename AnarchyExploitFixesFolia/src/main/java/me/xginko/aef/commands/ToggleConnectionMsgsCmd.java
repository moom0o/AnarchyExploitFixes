package me.xginko.aef.commands;

import me.xginko.aef.AnarchyExploitFixes;
import me.xginko.aef.enums.AEFKey;
import me.xginko.aef.enums.AEFPermission;
import net.kyori.adventure.text.Component;
import net.kyori.adventure.text.format.NamedTextColor;
import org.bukkit.command.Command;
import org.bukkit.command.CommandException;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.persistence.PersistentDataContainer;
import org.bukkit.persistence.PersistentDataType;
import org.jetbrains.annotations.NotNull;

import java.util.Collections;
import java.util.List;

public class ToggleConnectionMsgsCmd extends Command implements AEFCommand {

    public ToggleConnectionMsgsCmd() {
        super("toggleconnectionmsgs", "Toggle connection messages", "/toggleconnectionmsgs", Collections.singletonList("tcmsgs"));
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.config().cmd_toggleConMsgs_enabled;
    }

    @Override
    @SuppressWarnings("UnstableApiUsage")
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getCommandMap().register(plugin.getPluginMeta().getName().toLowerCase(), this);
    }

    @Override
    public @NotNull List<String> tabComplete(@NotNull CommandSender sender, @NotNull String alias, @NotNull String[] args)
            throws CommandException, IllegalArgumentException
    {
        return Collections.emptyList();
    }

    @Override
    @SuppressWarnings("DataFlowIssue")
    public boolean execute(@NotNull CommandSender sender, @NotNull String commandLabel, @NotNull String[] args) {
        if (!sender.hasPermission(AEFPermission.CMD_TOGGLE_CONNECT_MSGS.get())) {
            sender.sendMessage(AnarchyExploitFixes.getLang(sender).no_permission);
            return true;
        }

        if (!(sender instanceof Player player)) {
            sender.sendMessage(Component.text("Only players can execute this command.").color(NamedTextColor.RED));
            return true;
        }

        boolean msgsWereVisible;
        PersistentDataContainer dataContainer = player.getPersistentDataContainer();

        if (!dataContainer.has(AEFKey.CONNECT_MSG_TOGGLE.getKey(), PersistentDataType.BOOLEAN)) {
            msgsWereVisible = AnarchyExploitFixes.config().connectionMsgsAreOnByDefault;
        } else {
            msgsWereVisible = dataContainer.get(AEFKey.CONNECT_MSG_TOGGLE.getKey(), PersistentDataType.BOOLEAN);
        }

        dataContainer.set(AEFKey.CONNECT_MSG_TOGGLE.getKey(), PersistentDataType.BOOLEAN, !msgsWereVisible);

        if (msgsWereVisible) {
            player.sendMessage(AnarchyExploitFixes.getLang(player.locale()).misc_disabledConnectionMsgs);
        } else {
            player.sendMessage(AnarchyExploitFixes.getLang(player.locale()).misc_enabledConnectionMsgs);
        }

        return true;
    }
}
