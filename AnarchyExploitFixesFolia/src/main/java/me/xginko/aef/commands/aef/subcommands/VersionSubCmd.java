package me.xginko.aef.commands.aef.subcommands;

import io.papermc.paper.plugin.configuration.PluginMeta;
import me.xginko.aef.AnarchyExploitFixes;
import me.xginko.aef.commands.SubCommand;
import me.xginko.aef.enums.AEFPermission;
import me.xginko.aef.utils.KyoriUtil;
import net.kyori.adventure.text.Component;
import net.kyori.adventure.text.event.ClickEvent;
import net.kyori.adventure.text.format.NamedTextColor;
import org.bukkit.command.CommandException;
import org.bukkit.command.CommandSender;
import org.jetbrains.annotations.NotNull;

import java.util.Collections;
import java.util.List;

public class VersionSubCmd extends SubCommand {

    @Override
    public @NotNull String label() {
        return "version";
    }

    @Override
    public @NotNull List<String> tabComplete(@NotNull CommandSender sender, @NotNull String alias, @NotNull String[] args)
            throws CommandException, IllegalArgumentException
    {
        return Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"UnstableApiUsage", "DataFlowIssue"})
    public boolean execute(@NotNull CommandSender sender, @NotNull String commandLabel, @NotNull String[] args) {
        if (!sender.hasPermission(AEFPermission.CMD_AEF_VERSION.get())) {
            sender.sendMessage(AnarchyExploitFixes.getLang(sender).no_permission);
            return true;
        }

        PluginMeta pluginMeta = AnarchyExploitFixes.getInstance().getPluginMeta();

        sender.sendMessage(Component.empty());
        sender.sendMessage(
                Component.text("  "+pluginMeta.getName()+" "+pluginMeta.getVersion()).color(KyoriUtil.AEF_BLUE)
                        .append(Component.text(" by ").color(NamedTextColor.GRAY))
                        .append(Component.text(String.join(" & ", pluginMeta.getAuthors())).color(KyoriUtil.AEF_GOLD))
                        .clickEvent(ClickEvent.openUrl(pluginMeta.getWebsite())));
        sender.sendMessage(Component.empty());

        return true;
    }
}