package me.moomoo.anarchyexploitfixes.misc;

import lombok.RequiredArgsConstructor;
import me.moomoo.anarchyexploitfixes.Main;
import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.AsyncPlayerChatEvent;
import org.bukkit.event.player.PlayerQuitEvent;
import org.jetbrains.annotations.NotNull;

import java.util.Arrays;
import java.util.HashMap;

@RequiredArgsConstructor
public class Commands implements CommandExecutor, Listener {
    private final Main plugin;
    private final HashMap<String, String> messages = new HashMap<>();

    @EventHandler
    private void onChat(AsyncPlayerChatEvent evt) {
        messages.put(evt.getPlayer().getName(), evt.getMessage());
    }

    @EventHandler
    private void onLeave(PlayerQuitEvent evt) {
        messages.remove(evt.getPlayer().getName());
    }

    @Override
    public boolean onCommand(@NotNull CommandSender sender, @NotNull Command command, @NotNull String label, String[] args) {
        FileConfiguration config = plugin.getConfig();

        if (command.getName().equalsIgnoreCase("toggleconnectionmsgs")) {
            if (sender instanceof Player) {
                if (plugin.connectionMsgs.contains(sender.getName())) {
                    plugin.connectionMsgs.remove(sender.getName());
                    if (config.getBoolean("ConnectionMsgsOnByDefault")) {
                        sender.sendMessage(ChatColor.translateAlternateColorCodes('&', config.getString("EnabledMessage")));
                    } else {
                        sender.sendMessage(ChatColor.translateAlternateColorCodes('&', config.getString("DisabledMessage")));
                    }
                } else {
                    plugin.connectionMsgs.add(sender.getName());
                    if (config.getBoolean("ConnectionMsgsOnByDefault")) {
                        sender.sendMessage(ChatColor.translateAlternateColorCodes('&', config.getString("DisabledMessage")));
                    } else {
                        sender.sendMessage(ChatColor.translateAlternateColorCodes('&', config.getString("EnabledMessage")));
                    }
                }

                return true;
            }
        } else if (command.getName().equalsIgnoreCase("aef")) {
            if (args.length <= 0 || args[0].toLowerCase().startsWith("ver")) {
                sender.sendMessage(ChatColor.GOLD + "This server is running AnarchyExploitFixes v" + plugin.getDescription().getVersion());
                return true;
            }

            if (!(sender instanceof Player) || sender.isOp()) {
                if (args[0].contains("reload")) {
                    plugin.reloadConfig();
                    if (!Bukkit.getVersion().contains("1.12")) {
                        plugin.getConfig().set("RemoveALLIllegalBlocksOnCHUNKLOAD", false);
                        plugin.getConfig().set("FillInBedrockFloor", false);
                        plugin.getConfig().set("FillInBedrockRoof", false);
                        plugin.getConfig().set("ExperimentalDupePatch2", false);
                        plugin.getLogger().warning("Disabled:\nRemoveALLIllegalBlocksOnCHUNKLOAD\nFillInBedrockFloor\nFillInBedrockRoof\nExperimentalDupePatch2\nDue to errors with non 1.12.2 versions.");
                    } else {
                        plugin.getConfig().set("DisableFish", false);
                        plugin.getLogger().warning("Disabled:\nDisableFish\nbecause server is 1.12");
                    }
                    sender.sendMessage(ChatColor.GOLD + "AnarchyExploitFixes config reloaded.");
                    return true;
                }

                if (args[0].equals("kickphrase")) {
                    String phrase = Arrays.toString(args).replace(",", "").replace("[", "").replace("]", "").replace("kickphrase ", "");
                    plugin.getLogger().info(phrase + "sus");
                    for (Player p : Bukkit.getOnlinePlayers()) {
                        plugin.getLogger().info(p.getName());
                        plugin.getLogger().info(messages.get(p.getName()));
                        if (messages.get(p.getName()) != null) {
                            plugin.getLogger().info("contains");
                            if (messages.get(p.getName()).contains(phrase)) {
                                plugin.getLogger().info(messages.get(p.getName()));
                                p.kickPlayer(ChatColor.GRAY + "You have lost connection to the server");
                            }
                        }
                    }
                    return true;
                }

                if (args[0].equals("geared")) {
                    StringBuilder geared = new StringBuilder();
                    StringBuilder newPlayer = new StringBuilder();
                    Integer gearedInt = 0;
                    Integer newPlayerInt = 0;
                    for (Player c : Bukkit.getServer().getOnlinePlayers()) {
                        if (c.getInventory().getChestplate() != null || c.getInventory().getBoots() != null || c.getInventory().getHelmet() != null || c.getInventory().getLeggings() != null) {
                            geared.append(c.getName()).append(", ");
                            gearedInt++;
                        } else {
                            newPlayer.append(c.getName()).append(", ");
                            newPlayerInt++;
                        }
                    }
                    sender.sendMessage("Geared players: " + ChatColor.GOLD + geared + ChatColor.WHITE + " (" + gearedInt + ")");
                    sender.sendMessage("Naked players: " + ChatColor.GOLD + newPlayer + ChatColor.WHITE + " (" + newPlayerInt + ")");
                    sender.sendMessage("Total players: " + ChatColor.GOLD + (newPlayerInt + gearedInt));
                    return true;
                }

                if (args[0].equals("elytra")) {
                    StringBuilder flying = new StringBuilder();
                    StringBuilder notFlying = new StringBuilder();
                    Integer flyInt = 0;
                    Integer noFlyInt = 0;

                    for (Player c : Bukkit.getServer().getOnlinePlayers()) {
                        if (c.isGliding()) {
                            flying.append(c.getName()).append(", ");
                            flyInt++;
                        } else {
                            notFlying.append(c.getName()).append(", ");
                            noFlyInt++;
                        }
                    }

                    sender.sendMessage("Flying on elytra: " + ChatColor.GOLD + flying + ChatColor.WHITE + " (" + flyInt + ")");
                    sender.sendMessage("Not flying on elytra: " + ChatColor.GOLD + notFlying + ChatColor.WHITE + " (" + noFlyInt + ")");
                    sender.sendMessage("Total players: " + ChatColor.GOLD + (flyInt + noFlyInt));
                    return true;
                }

                if (args[0].equals("lag")) {
                    try {
                        if (args[1] != null && args[1].length() > 0) {
                            Thread.sleep(Long.parseLong(args[1]));
                        } else {
                            Thread.sleep(1000);
                        }
                        return true;
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                }
            }
        }
        sender.sendMessage(ChatColor.WHITE + "Unknown command. Type \"/help\" for help.");
        return true;
    }

}
