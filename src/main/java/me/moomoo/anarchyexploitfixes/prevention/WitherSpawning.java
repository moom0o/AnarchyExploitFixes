package me.moomoo.anarchyexploitfixes.prevention;

import lombok.RequiredArgsConstructor;
import me.moomoo.anarchyexploitfixes.Main;
import org.bukkit.ChatColor;
import org.bukkit.Location;
import org.bukkit.configuration.ConfigurationSection;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.CreatureSpawnEvent;

import java.awt.*;

@RequiredArgsConstructor
public class WitherSpawning implements Listener {
    private final Main plugin;

    @EventHandler
    private void onCreatureSpawn(CreatureSpawnEvent evt) {
        ConfigurationSection configSection = plugin.getConfig().getConfigurationSection("DisableWitherSpawningAtSpawn");

        if (!configSection.getBoolean("overworld") && !configSection.getBoolean("nether") && !configSection.getBoolean("end")) {
            return;
        }

        int radius = configSection.getInt("radius");
        switch (evt.getEntity().getWorld().getEnvironment()) {
            case NORMAL: {
                if (configSection.getBoolean("overworld") && shouldCancel(evt, radius)) {
                    evt.setCancelled(true);
                    sendMessage(evt.getEntity().getLocation(), radius);
                }
                break;
            }
            case NETHER: {
                if (configSection.getBoolean("nether") && shouldCancel(evt, radius)) {
                    evt.setCancelled(true);
                    sendMessage(evt.getEntity().getLocation(), radius);
                }
                break;
            }
            case THE_END: {
                if (configSection.getBoolean("end") && shouldCancel(evt, radius)) {
                    evt.setCancelled(true);
                    sendMessage(evt.getEntity().getLocation(), radius);
                }
                break;
            }
        }
    }

    private boolean shouldCancel(CreatureSpawnEvent evt, int radius) {
        Point p1 = new Point(evt.getEntity().getLocation().getBlockX(), evt.getEntity().getLocation().getBlockZ());
        Point p2 = new Point(0, 0);
        return p1.distance(p2) < radius;
    }

    private void sendMessage(Location location, int radius) {
        ConfigurationSection configSection = plugin.getConfig().getConfigurationSection("DisableWitherSpawningAtSpawn");
        for (Player p : location.getNearbyPlayers(8)) {
            p.sendMessage(ChatColor.translateAlternateColorCodes('&', configSection.getString("message").replace("%radius%", String.valueOf(radius))));
        }
    }
}
