package me.xginko.aef.commands;

import me.xginko.aef.AnarchyExploitFixes;
import me.xginko.aef.utils.permissions.AEFPermission;
import org.bukkit.ChatColor;
import org.bukkit.command.CommandException;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.jetbrains.annotations.NotNull;

import java.util.Collections;
import java.util.List;

public class ToggleConnectionMsgsCmd extends AEFCommand {

    public ToggleConnectionMsgsCmd() {
        super("toggleconnectionmsgs", "Toggle connection messages",
                "/toggleconnectionmsgs", Collections.singletonList("tcmsgs"));
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.config().cmd_toggleConMsgs_enabled;
    }

    @Override
    public @NotNull List<String> tabComplete(@NotNull CommandSender sender, @NotNull String alias, @NotNull String[] args)
            throws CommandException, IllegalArgumentException
    {
        return Collections.emptyList();
    }

    @Override
    public boolean execute(@NotNull CommandSender sender, @NotNull String commandLabel, @NotNull String[] args) {
        if (!AnarchyExploitFixes.permissions().permissionValue(sender, AEFPermission.CMD_TOGGLE_CONNECT_MSGS.node()).toBoolean()) {
            sender.sendMessage(AnarchyExploitFixes.translation(sender).no_permission);
            return true;
        }

        if (!(sender instanceof Player)) {
            sender.sendMessage(ChatColor.RED+"Only players can execute this command.");
            return true;
        }

        final Player player = (Player) sender;

        AnarchyExploitFixes.datastore().getJoinLeaveEnabled(player.getUniqueId()).thenAccept(enabled -> {
            if (enabled) {
                AnarchyExploitFixes.datastore().setJoinLeaveEnabled(player.getUniqueId(), false)
                        .thenRun(() -> sender.sendMessage(AnarchyExploitFixes.translation(player.getLocale()).misc_disabledConnectionMsgs));
            } else {
                AnarchyExploitFixes.datastore().setJoinLeaveEnabled(player.getUniqueId(), true)
                        .thenRun(() -> sender.sendMessage(AnarchyExploitFixes.translation(player.getLocale()).misc_enabledConnectionMsgs));
            }
        });

        return true;
    }
}
