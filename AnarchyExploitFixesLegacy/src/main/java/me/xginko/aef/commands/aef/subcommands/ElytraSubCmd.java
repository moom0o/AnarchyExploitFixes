package me.xginko.aef.commands.aef.subcommands;

import me.xginko.aef.AnarchyExploitFixes;
import me.xginko.aef.commands.SubCommand;
import me.xginko.aef.utils.permissions.AEFPermission;
import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.command.CommandException;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.jetbrains.annotations.NotNull;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class ElytraSubCmd extends SubCommand {

    @Override
    public @NotNull String label() {
        return "elytra";
    }

    @Override
    public @NotNull List<String> tabComplete(@NotNull CommandSender sender, @NotNull String alias, @NotNull String[] args)
            throws CommandException, IllegalArgumentException
    {
        return Collections.emptyList();
    }

    @Override
    public boolean execute(@NotNull CommandSender sender, @NotNull String commandLabel, @NotNull String[] args) {
        if (!AnarchyExploitFixes.permissions().permissionValue(sender, AEFPermission.CMD_AEF_ELYTRA.node()).toBoolean()) {
            sender.sendMessage(AnarchyExploitFixes.translation(sender).no_permission);
            return true;
        }

        List<String> gliding = new ArrayList<>();
        List<String> notGliding = new ArrayList<>();

        for (Player player : Bukkit.getOnlinePlayers()) {
            if (player.isGliding()) {
                gliding.add(player.getName());
            } else {
                notGliding.add(player.getName());
            }
        }

        sender.sendMessage("");
        sender.sendMessage(ChatColor.WHITE + " Elytra flying: " + ChatColor.AQUA + String.join(", ", gliding) + ChatColor.WHITE +" ("+gliding.size() + ")");
        sender.sendMessage(ChatColor.WHITE + " Not Elytra flying: " + ChatColor.AQUA + String.join(", ", notGliding) + ChatColor.WHITE +" ("+notGliding.size() + ")");
        sender.sendMessage(ChatColor.WHITE + " Total players: " + ChatColor.AQUA + (gliding.size() + notGliding.size()));
        sender.sendMessage("");

        return true;
    }
}