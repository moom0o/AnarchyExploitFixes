package me.xginko.aef.commands.aef.subcommands;

import me.xginko.aef.AnarchyExploitFixes;
import me.xginko.aef.commands.SubCommand;
import me.xginko.aef.utils.permissions.AEFPermission;
import me.xginko.aef.modules.AEFModule;
import org.bukkit.ChatColor;
import org.bukkit.command.CommandException;
import org.bukkit.command.CommandSender;
import org.jetbrains.annotations.NotNull;

import java.util.Collections;
import java.util.List;

public class DisableSubCmd extends SubCommand {

    @Override
    public @NotNull String label() {
        return "disable";
    }

    @Override
    public @NotNull List<String> tabComplete(@NotNull CommandSender sender, @NotNull String alias, @NotNull String[] args)
            throws CommandException, IllegalArgumentException
    {
        return Collections.emptyList();
    }

    @Override
    public boolean execute(@NotNull CommandSender sender, @NotNull String commandLabel, @NotNull String[] args) {
        if (!AnarchyExploitFixes.permissions().permissionValue(sender, AEFPermission.CMD_AEF_DISABLE.node()).toBoolean()) {
            sender.sendMessage(AnarchyExploitFixes.getLang(sender).no_permission);
            return true;
        }

        sender.sendMessage("");
        sender.sendMessage(ChatColor.WHITE + "  Disabling plugin.");
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getScheduler().runTaskAsynchronously(plugin, () -> {
            AEFModule.disableAll();
            sender.sendMessage(ChatColor.AQUA + "  All enabled plugin features have been disabled.");
            sender.sendMessage(ChatColor.AQUA + "  Use /aef reload to enable the plugin again.");
            sender.sendMessage("");
        });

        return true;
    }
}