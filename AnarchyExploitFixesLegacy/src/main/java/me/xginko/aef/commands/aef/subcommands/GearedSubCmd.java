package me.xginko.aef.commands.aef.subcommands;

import me.xginko.aef.AnarchyExploitFixes;
import me.xginko.aef.commands.SubCommand;
import me.xginko.aef.enums.AEFPermission;
import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.command.CommandException;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.jetbrains.annotations.NotNull;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Objects;

public class GearedSubCmd extends SubCommand {

    @Override
    public @NotNull String label() {
        return "geared";
    }

    @Override
    public @NotNull List<String> tabComplete(@NotNull CommandSender sender, @NotNull String alias, @NotNull String[] args)
            throws CommandException, IllegalArgumentException
    {
        return Collections.emptyList();
    }

    @Override
    public boolean execute(@NotNull CommandSender sender, @NotNull String commandLabel, @NotNull String[] args) {
        if (!sender.hasPermission(AEFPermission.CMD_AEF_GEARED.get())) {
            sender.sendMessage(AnarchyExploitFixes.getLang(sender).no_permission);
            return true;
        }

        List<String> geared = new ArrayList<>();
        List<String> unGeared = new ArrayList<>();

        for (Player player : Bukkit.getOnlinePlayers()) {
            if (Arrays.stream(player.getInventory().getArmorContents()).anyMatch(Objects::nonNull)) {
                geared.add(player.getName());
            } else {
                unGeared.add(player.getName());
            }
        }

        sender.sendMessage("");
        sender.sendMessage(ChatColor.WHITE + " Geared players: " + ChatColor.AQUA + String.join(", ", geared) + ChatColor.WHITE +" ("+geared.size()+")");
        sender.sendMessage(ChatColor.WHITE + " Ungeared players: " + ChatColor.AQUA + String.join(", ", unGeared) + ChatColor.WHITE+" ("+unGeared.size()+")");
        sender.sendMessage(ChatColor.WHITE + " Total players: " + ChatColor.AQUA + (geared.size() + unGeared.size()));
        sender.sendMessage("");

        return true;
    }
}