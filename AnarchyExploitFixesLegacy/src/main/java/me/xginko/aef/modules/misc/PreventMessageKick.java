package me.xginko.aef.modules.misc;

import me.xginko.aef.modules.AEFModule;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.HandlerList;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerKickEvent;

import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;
import java.util.stream.Collectors;

public class PreventMessageKick extends AEFModule implements Listener {

    private final Set<String> kickMessagesToListenTo;

    public PreventMessageKick() {
        super("misc.kicks.prevent-message-kick", false);
        config.addComment(configPath + ".enable", "Cancels the kick for specific kick messages.");
        this.kickMessagesToListenTo = config.getList(configPath + ".kick-messages-to-listen-to",
                        Arrays.asList("Kicked for spamming", "Stop spamming!"))
                .stream()
                .map(String::toLowerCase)
                .collect(Collectors.toCollection(HashSet::new));
    }

    @Override
    public void enable() {
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public void disable() {
        HandlerList.unregisterAll(this);
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    private void onPlayerKick(PlayerKickEvent event) {
        if (kickMessagesToListenTo.contains(event.getReason().toLowerCase())) {
            event.setCancelled(true);
        }
    }
}
