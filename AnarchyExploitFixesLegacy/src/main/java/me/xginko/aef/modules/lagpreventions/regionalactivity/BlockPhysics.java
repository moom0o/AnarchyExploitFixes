package me.xginko.aef.modules.lagpreventions.regionalactivity;

import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.block.BlockPhysicsEvent;

public class BlockPhysics extends RegionalActivityModule {

    private final int limit;

    public BlockPhysics() {
        super(
                "block-physics",
                false,
                true,
                1500.0,
                18000,
                20000,
                10.0,
                120.0,
                "Limits block physics within a configurable radius and timeframe\n" +
                "to help reduce lag by cancelling burst activity hotspots.\n" +
                "\n" +
                "Note:\n" +
                "\n" +
                "The event used for this check (BlockPhysicsEvent) is a high frequency event,\n" +
                "it may be called thousands of times per a second on a busy server.\n" +
                "Where possible the event may also only be called for the \"root\" block of\n" +
                "physics updates in order to limit event spam.\n" +
                "Physics updates that cause other blocks to change their state may not result\n" +
                "in an event for each of those blocks (usually adjacent)."
        );
        this.limit = config.getInt(configPath + ".block-physics-event-limit", 256000,
                "Maximum number of times a physics check can be performed within the configured\n" +
                        "timeframe before they will be put on cooldown.");
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    private void onBlockPhysics(BlockPhysicsEvent event) {
        if (shouldCancelActivity(event, event.getBlock().getLocation(), limit)) {
            event.setCancelled(true);
        }
    }
}
