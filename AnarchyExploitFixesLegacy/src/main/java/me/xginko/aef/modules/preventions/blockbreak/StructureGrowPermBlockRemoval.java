package me.xginko.aef.modules.preventions.blockbreak;

import me.xginko.aef.modules.AEFModule;
import me.xginko.aef.utils.LocationUtil;
import me.xginko.aef.utils.MaterialUtil;
import org.bukkit.World;
import org.bukkit.block.BlockState;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.HandlerList;
import org.bukkit.event.Listener;
import org.bukkit.event.world.StructureGrowEvent;

public class StructureGrowPermBlockRemoval extends AEFModule implements Listener {

    public StructureGrowPermBlockRemoval() {
        super("preventions.permanent-block-breaking.by-growing-structures", true,
                "Prevents removal of permanent blocks by growing structures \n" +
                "like mushrooms into them.");
    }

    @Override
    public void enable() {
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public void disable() {
        HandlerList.unregisterAll(this);
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    public void onStructureGrow(StructureGrowEvent event) {
        World world = event.getWorld();

        for (BlockState blockState : event.getBlocks()) {
            if (MaterialUtil.INDESTRUCTIBLES.contains(world.getBlockAt(blockState.getLocation()).getType())) {
                event.setCancelled(true);
                info("Prevented permanent block break by "+ event.getSpecies().name() +" at " + LocationUtil.toString(blockState.getLocation()));
                return;
            }
        }
    }
}
