package me.xginko.aef.modules.combat.auras;

import com.cryptomorin.xseries.XEntityType;
import com.cryptomorin.xseries.XMaterial;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.block.Action;
import org.bukkit.event.entity.EntityDamageByEntityEvent;
import org.bukkit.event.player.PlayerInteractEvent;

public class CrystalAuraDelay extends AuraDelayModule {

    public CrystalAuraDelay() {
        super("combat.crystal-aura.regular-delay", 200, 0);
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    private void onEntityDamageByEntity(EntityDamageByEntityEvent event) {
        if (breakDelayNanos <= 0) return;
        if (event.getEntityType() != XEntityType.END_CRYSTAL.get()) return;
        if (event.getDamager().getType() != XEntityType.PLAYER.get()) return;

        if (isOnCooldown(event.getDamager().getUniqueId(), breakCooldowns, placeDelayNanos)) {
            event.setCancelled(true);
            if (updateInventory) ((Player) event.getDamager()).updateInventory();
        }
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    private void onPlayerInteract(PlayerInteractEvent event) {
        if (placeDelayNanos <= 0) return;
        if (event.getAction() != Action.RIGHT_CLICK_BLOCK) return; // Need to right-click a block to place a crystal
        if (event.getItem() == null || event.getItem().getType() != XMaterial.END_CRYSTAL.get()) return;

        if (isOnCooldown(event.getPlayer().getUniqueId(), placeCooldowns, placeDelayNanos)) {
            event.setCancelled(true);
            if (updateInventory) event.getPlayer().updateInventory();
        }
    }
}