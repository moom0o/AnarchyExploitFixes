package me.xginko.aef.modules.combat.auras;

import com.cryptomorin.xseries.XMaterial;
import me.xginko.aef.utils.WorldUtil;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.block.Action;
import org.bukkit.event.block.BlockPlaceEvent;
import org.bukkit.event.player.PlayerInteractEvent;

public class AnchorAuraDelay extends AuraDelayModule {

    public AnchorAuraDelay() {
        super("combat.anchor-aura-delay", 0, 400);
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    private void onPlayerInteract(PlayerInteractEvent event) {
        if (breakDelayNanos <= 0) return;
        if (event.getAction() != Action.RIGHT_CLICK_BLOCK) return;
        if (event.getClickedBlock().getType() != XMaterial.RESPAWN_ANCHOR.get()) return;
        if (event.getItem() == null || event.getItem().getType() != XMaterial.GLOWSTONE.get()) return;
        if (WorldUtil.isRespawnAnchorWorks(event.getPlayer().getWorld())) return;

        if (
                breakCooldowns.containsKey(event.getPlayer().getUniqueId())
                && breakCooldowns.get(event.getPlayer().getUniqueId()) > System.nanoTime()
        ) {
            event.setCancelled(true);
            if (updateInventory) event.getPlayer().updateInventory();
        } else {
            breakCooldowns.put(event.getPlayer().getUniqueId(), System.nanoTime() + breakDelayNanos);
        }
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    private void onBlockPlace(BlockPlaceEvent event) {
        if (placeDelayNanos <= 0) return;
        if (event.getBlock().getType() != XMaterial.RESPAWN_ANCHOR.get()) return;
        if (WorldUtil.isRespawnAnchorWorks(event.getPlayer().getWorld())) return;

        if (
                placeCooldowns.containsKey(event.getPlayer().getUniqueId())
                && placeCooldowns.get(event.getPlayer().getUniqueId()) > System.nanoTime()
        ) {
            event.setCancelled(true);
            if (updateInventory) event.getPlayer().updateInventory();
        } else {
            placeCooldowns.put(event.getPlayer().getUniqueId(), System.nanoTime() + placeDelayNanos);
        }
    }
}