package me.xginko.aef.modules.lagpreventions.regionalactivity;

import com.cryptomorin.xseries.XMaterial;
import me.xginko.aef.utils.GenericUtil;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.block.BlockRedstoneEvent;

public class Redstone extends RegionalBlockActivityModule {

    public Redstone() {
        super(
                "redstone",
                false,
                true,
                6000,
                1500.0,
                18000,
                20000,
                10.0,
                120.0,
                GenericUtil.mapOfEntries(
                        GenericUtil.mapEntry(XMaterial.SCULK_SENSOR, 500),
                        GenericUtil.mapEntry(XMaterial.SCULK_SHRIEKER, 300),
                        GenericUtil.mapEntry(XMaterial.CALIBRATED_SCULK_SENSOR, 500),
                        GenericUtil.mapEntry(XMaterial.OBSERVER, 1500),
                        GenericUtil.mapEntry(XMaterial.COMPARATOR, 2000)),
                "Limits redstone activity within a configurable radius and timeframe\n" +
                "to help reduce lag by cancelling high activity hotspots.\n" +
                "\n" +
                "Examples:\n" +
                "\n" +
                "- A redstone current changes.\n" +
                "- A redstone block gets powered on.\n" +
                "- A redstone block gets powered off.\n"
        );
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    private void onBlockRedstone(BlockRedstoneEvent event) {
        if (shouldCancelBlockEvent(event)) {
            event.setNewCurrent(0);
        }
    }
}
